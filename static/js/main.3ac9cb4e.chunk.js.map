{"version":3,"sources":["components/Requirements/Requirements.js","components/timeFormat/TimeFormat.js","App.js","index.js"],"names":["click$","Subject","doubleClick$","pipe","buffer","debounceTime","map","clicks","length","filter","clicksLength","timeFormat","sec","hours","Math","floor","minutes","seconds","App","useState","setSeconds","run","setRun","time","setTime","wait","setWait","useEffect","sub","fromNum","timer","second","subscribe","unsubscribe","className","onClick","prev","next","disabled","Promise","resolve","then","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGaA,EAAS,IAAIC,IAEbC,EAAeF,EAAOG,KACjCC,YAAOJ,EAAOG,KAAKE,YAAa,OAChCC,aAAI,SAAAC,GAAM,OAAIA,EAAOC,UACrBC,aAAO,SAAAC,GAAY,OAAqB,IAAjBA,MCRlB,SAASC,EAAWC,GACvB,IAAIC,EAAQC,KAAKC,MAAMH,EAAM,MACzBI,EAAUF,KAAKC,OAAOH,EAAe,KAARC,GAAiB,IAC9CI,EAAUL,EAAe,KAARC,EAA2B,GAAVG,EAMtC,OAJIH,EAAQ,KAAMA,EAAQ,IAAMA,GAC5BG,EAAU,KAAMA,EAAU,IAAMA,GAChCC,EAAU,KAAMA,EAAU,IAAMA,GAE7B,CAAEJ,QAAOG,UAASC,W,iBCyDdC,MA7Df,WAAgB,IAAD,EACiBC,mBAAS,GAD1B,mBACNF,EADM,KACGG,EADH,OAESD,oBAAS,GAFlB,mBAENE,EAFM,KAEDC,EAFC,OAGWH,mBAASR,EAAW,IAH/B,mBAGNY,EAHM,KAGAC,EAHA,OAIWL,oBAAS,GAJpB,mBAINM,EAJM,KAIAC,EAJA,KA8Cb,OAxCAC,qBAAU,WACR,GAAIN,EAAK,CACP,IAAMO,GFFiBC,EEEEZ,EFDtBa,YAAM,EAAG,KAAM3B,KACpBG,aAAI,SAAAyB,GAAM,OAAIA,EAASF,OEAaG,UAAUZ,GAE5C,OAAO,kBAAMQ,EAAIK,eFJhB,IAAsBJ,EEMlBJ,GAAML,EAAW,KAEvB,CAACC,EAAKI,IAETE,qBAAU,WACRH,EAAQb,EAAWM,MAClB,CAACA,IAEJU,qBAAU,WACRzB,EAAa8B,WAAU,WACrBN,GAAQ,GACRJ,GAAO,QAER,IAqBI,sBAAKY,UAAU,MAAf,UACL,sBAAKA,UAAU,OAAf,UACGX,EAAKV,MADR,IAEGU,EAAKP,QAFR,IAGGO,EAAKN,WAGR,gCACE,wBAAQkB,QA3BZ,WACMV,GACFC,GAAQ,GACRJ,GAAO,IAEPA,GAAO,SAAAc,GAAI,OAAKA,MAsBhB,SAAuCf,EAAM,OAAS,UACtD,wBAAQc,QAAS,kBAAMnC,EAAOqC,QAAQC,UAAWjB,EAAjD,kBACA,wBAAQc,QApBZ,WACE,IAAII,SAAQ,SAACC,GACXlB,GAAO,GACPF,EAAW,GACXoB,OACCC,MAAK,WACNnB,GAAO,OAcwBgB,UAAWjB,EAA1C,0BCxDNqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3ac9cb4e.chunk.js","sourcesContent":["import {timer, Subject} from 'rxjs'\r\nimport {map, filter, buffer, debounceTime} from 'rxjs/operators'\r\n\r\nexport const click$ = new Subject()\r\n\r\nexport const doubleClick$ = click$.pipe(\r\n  buffer(click$.pipe(debounceTime(300))),\r\n  map(clicks => clicks.length),\r\n  filter(clicksLength => clicksLength === 2)\r\n)\r\n\r\nexport function Requirements(fromNum) {\r\n  return timer(0, 1000).pipe(\r\n    map(second => second + fromNum)\r\n  )\r\n} ","export function timeFormat(sec) {\r\n    let hours = Math.floor(sec / 3600)\r\n    let minutes = Math.floor((sec - (hours * 3600)) / 60)\r\n    let seconds = sec - (hours * 3600) - (minutes * 60)\r\n\r\n    if (hours < 10) { hours = '0' + hours }\r\n    if (minutes < 10) { minutes = '0' + minutes }\r\n    if (seconds < 10) { seconds = '0' + seconds }\r\n\r\n    return { hours, minutes, seconds }\r\n}\r\n","import { useState, useEffect } from 'react'\nimport { Requirements, doubleClick$, click$ } from './components/Requirements/Requirements'\nimport { timeFormat } from './components/timeFormat/TimeFormat';\nimport './App.css'\n\nfunction App() {\n  const [seconds, setSeconds] = useState(0)\n  const [run, setRun] = useState(false)\n  const [time, setTime] = useState(timeFormat(0))\n  const [wait, setWait] = useState(false)\n\n  useEffect(() => {\n    if (run) {\n      const sub = Requirements(seconds).subscribe(setSeconds)\n\n      return () => sub.unsubscribe()\n    } else {\n      if (!wait) setSeconds(0)\n    }\n  }, [run, wait])\n\n  useEffect(() => {\n    setTime(timeFormat(seconds))\n  }, [seconds])\n\n  useEffect(() => {\n    doubleClick$.subscribe(() => {\n      setWait(true)\n      setRun(false)\n    })\n  }, [])\n\n  function startStopBtnHandler() {\n    if (wait) {\n      setWait(false)\n      setRun(true)\n    } else {\n      setRun(prev => !prev)\n    }\n  }\n\n  function resetHandler() {\n    new Promise((resolve) => {\n      setRun(false)\n      setSeconds(0)\n      resolve()\n    }).then(() => {\n      setRun(true)\n    })\n  }\n\n  return <div className='App'>\n    <div className='text'>\n      {time.hours}:\n      {time.minutes}:\n      {time.seconds}\n    </div>\n\n    <div >\n      <button onClick={startStopBtnHandler}>{run ? 'Stop' : 'Start'}</button>\n      <button onClick={() => click$.next()} disabled={!run}>Wait</button>\n      <button onClick={resetHandler} disabled={!run}>Reset</button>\n    </div>\n  </div>\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}